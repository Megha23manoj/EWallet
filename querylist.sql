USE EWALLET;
-- Bank Account
CREATE TABLE `BANK_ACCOUNT`(
BankID VARCHAR(25) NOT NULL, 
BANumber INT NOT NULL,
PRIMARY KEY (BankID, BANumber)
);

-- Electronic Address
CREATE TABLE `ELEC_ADDRESS`(
Identifier VARCHAR(25) NOT NULL,
Verified BIT DEFAULT 0,
EType VARCHAR(10),
PRIMARY KEY(Identifier)
);

-- User Account
CREATE TABLE `USER_ACCOUNT`(
SSN NUMERIC(9) NOT NULL,
UserName VARCHAR(50) NOT NULL,
PhoneNo VARCHAR(25),
Balance DECIMAL(15,2) DEFAULT 0.0,
UserBankID VARCHAR(25),
UserBANumber INT,
PBAVerified BIT DEFAULT 0,
PRIMARY KEY (SSN),
CONSTRAINT USRPHNFK FOREIGN KEY (PhoneNo) REFERENCES ELEC_ADDRESS(Identifier),
CONSTRAINT USRBNKFK FOREIGN KEY (UserBankID, UserBANumber) REFERENCES BANK_ACCOUNT(BankID, BANumber)
);

-- Email Address
CREATE TABLE `EMAIL`(
EmailAdd VARCHAR(25) NOT NULL REFERENCES ELEC_ADDRESS(Identifier),
UserSSN NUMERIC(9) NOT NULL REFERENCES USER_ACCOUNT(SSN),
PRIMARY KEY(EmailAdd)
);
 
-- Request Transaction
CREATE TABLE `REQUEST_TRANSACTION`(
RTid VARCHAR(30) NOT NULL,
ReqAmount DECIMAL(15,2) DEFAULT 0.0 NOT NULL,
Req_Date DATETIME, 
ReqMemo VARCHAR(100),
ReqSSN NUMERIC(9) REFERENCES USER_ACCOUNT(SSN),
PRIMARY KEY(RTid)
);

-- Send Transaction
CREATE TABLE `SEND_TRANSACTION`(
STid VARCHAR(30) NOT NULL,
SendAmount DECIMAL(15,2) DEFAULT 0.0 NOT NULL,
Send_Date DATETIME,  
Memo VARCHAR(100),
Cancel_Reason VARCHAR(100),
SendSSN NUMERIC(9) REFERENCES USER_ACCOUNT(SSN),
SendIdentifier VARCHAR(25) REFERENCES ELEC_ADDRESS(Identifier),
PRIMARY KEY(STid)
);

-- Has Additional
CREATE TABLE `HAS_ADDITIONAL`(
SSN NUMERIC(9) NOT NULL REFERENCES USER_ACCOUNT(SSN),
BankID VARCHAR(25) NOT NULL, 
BANumber INT NOT NULL,
Verified BIT,
PRIMARY KEY (BankID, BANumber, SSN),
CONSTRAINT HASBNKFKEY FOREIGN KEY (BankID, BANumber) REFERENCES BANK_ACCOUNT(BankID, BANumber)
);

-- Request From
CREATE TABLE `FROM`(
RTid VARCHAR(30) NOT NULL REFERENCES REQUEST_TRANSACTION(RTid), 
Identifier VARCHAR(25) NOT NULL REFERENCES ELEC_ADDRESS(Identifier),
Percentage DECIMAL(3,2) DEFAULT 0.0,
PRIMARY KEY(RTid, Identifier)
)

